/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2015-10-12 15:46:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.back;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import empty.User;

public final class back_005flogin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("empty.User");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n");
      out.write("<title>登陆后台管理</title>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("\n");
      out.write("        <!-- Bootstrap -->\n");
      out.write("        <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\" media=\"screen\">\n");
      out.write("        <link href=\"css/bootstrap-theme.min.css\" rel=\"stylesheet\" media=\"screen\">\n");
      out.write("\n");
      out.write("        <!-- Bootstrap Admin Theme -->\n");
      out.write("        <link href=\"css/bootstrap-admin-theme.css\" rel=\"stylesheet\" media=\"screen\">\n");
      out.write("\n");
      out.write("        <!-- Custom styles -->\n");
      out.write("        <style type=\"text/css\">\n");
      out.write("            .alert{\n");
      out.write("                margin: 0 auto 20px;\n");
      out.write("            }\n");
      out.write("            .sorrymsgy{\n");
      out.write("            \tcolor:#FF9900;\n");
      out.write("            }\n");
      out.write("            .sorrymsgr{\n");
      out.write("            \tcolor: red;\n");
      out.write("            }\n");
      out.write("        </style>\n");
      out.write("\n");
      out.write("        <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->\n");
      out.write("        <!--[if lt IE 9]>\n");
      out.write("           <script type=\"text/javascript\" src=\"js/html5shiv.js\"></script>\n");
      out.write("           <script type=\"text/javascript\" src=\"js/respond.min.js\"></script>\n");
      out.write("        <![endif]-->\n");
      out.write("</head>\n");
      out.write("<body class=\"bootstrap-admin-without-padding\">\n");
      out.write("<!-- java start -->\n");

	User user = null;
	int is_admin = 0;
	if(session.getAttribute("user")!= null){
		user = (User)session.getAttribute("user");
		if(user.getUser_isadmin() == 1){
			is_admin = 1;
		}
	}
	
	//验证登陆回来的信息
	String msg = "";
	if(request.getParameter("msg")!=null){
		msg = request.getParameter("msg");
	}

      out.write("\n");
      out.write("<!-- java end -->\n");
      out.write("        <div class=\"container\">\n");
      out.write("            <div class=\"row\">\n");
      out.write("                <div class=\"alert alert-info\">\n");
      out.write("                    <a class=\"close\" data-dismiss=\"alert\" href=\"#\">&times;</a>\n");
      out.write("                    请输入正确的管理员用户名和密码！\n");
      out.write("                </div>\n");
      out.write("                <form method=\"post\" action=\"/myblog/AdminSessionDo\" class=\"bootstrap-admin-login-form\">\n");
      out.write("                    <h1>登录</h1>\n");
      out.write("                    ");
if(user != null && user.getUser_isadmin() == 1) {
      out.write("\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <input class=\"form-control\" type=\"text\" name=\"username\" placeholder=\"账号\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <input class=\"form-control\" type=\"password\" name=\"password\" placeholder=\"密码\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"form-group\">\n");
      out.write("                        <label>\n");
      out.write("                            <input type=\"checkbox\" name=\"remember_me\">\n");
      out.write("                           记住密码\n");
      out.write("                        </label>\n");
      out.write("                    </div>\n");
      out.write("                    <input class=\"btn btn-lg btn-primary\" type=\"submit\" value=\"提交\"/>\n");
      out.write("                    ");
}else{ 
      out.write("\n");
      out.write("                    <h2 class=\"sorrymsgy\">对不起，您不是我们的管理员</h2><h1  class=\"sorrymsgr\">您无权登陆</h1><hr/>\n");
      out.write("                    <a href=\"javascript:history.go(-1)\">请返回上一个页面~(^_^)~</a>\n");
      out.write("                    ");
} 
      out.write("\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\" src=\"http://code.jquery.com/jquery-2.0.3.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\" src=\"js/bootstrap.min.js\"></script>\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("        \t//判断是否是admin\t\n");
      out.write("        \tvar isadmin = '");
      out.print(is_admin);
      out.write("';\n");
      out.write("        \tif(isadmin == 0){\n");
      out.write("        \t\talert('对不起，您不是我们的管理员');\n");
      out.write("        \t}\n");
      out.write("        \t\n");
      out.write("        \tvar message = '");
      out.print(msg);
      out.write("';\n");
      out.write("        \tif(message != \"\"){\n");
      out.write("\t        \tif(message == 0){\n");
      out.write("\t        \t\talert('对不起，用户名错误');\n");
      out.write("\t        \t}else{\n");
      out.write("\t        \t\talert('对不起，密码错误');\n");
      out.write("\t        \t}\n");
      out.write("        \t}\n");
      out.write("        \t\n");
      out.write("            $(function() {\n");
      out.write("                // Setting focus\n");
      out.write("                $('input[name=\"email\"]').focus();\n");
      out.write("                // Setting width of the alert box\n");
      out.write("                var formWidth = $('.bootstrap-admin-login-form').innerWidth();\n");
      out.write("                var alertPadding = parseInt($('.alert').css('padding'));\n");
      out.write("                $('.alert').width(formWidth - 2 * alertPadding);\n");
      out.write("            });\n");
      out.write("        </script>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
