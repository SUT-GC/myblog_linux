/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.27
 * Generated at: 2015-10-21 04:47:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.login;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class login_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"../error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("\n");
      out.write("    <head>\n");
      out.write("\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <title>用户登陆</title>\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <meta name=\"description\" content=\"\">\n");
      out.write("        <meta name=\"author\" content=\"\">\n");
      out.write("\n");
      out.write("        <!-- CSS -->\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/reset.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/supersized.css\">\n");
      out.write("        <link rel=\"stylesheet\" href=\"css/style.css\">\n");
      out.write("\n");
      out.write("        <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->\n");
      out.write("        <!--[if lt IE 9]>\n");
      out.write("            <script src=\"http://html5shim.googlecode.com/svn/trunk/html5.js\"></script>\n");
      out.write("        <![endif]-->\n");
      out.write("\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body oncontextmenu=\"return false\">\n");
      out.write("\t\t<!-- java start -->\n");
      out.write("\t\t");

			String rs = "";
			if(request.getParameter("Rm")!=null){
				rs = request.getParameter("Rm");
			}
			String ls = "";
			if(request.getParameter("Lm")!=null){
				ls = request.getParameter("Lm");
			}
			System.out.println("rs = "+rs+"/ls = "+ls);
		
      out.write("\n");
      out.write("\t\t<!-- java end -->\n");
      out.write("        \t<div class=\"page-container\">\n");
      out.write("            <h1>Login</h1>\n");
      out.write("            <form action=\"/myblog/LoginDo\" method=\"post\">\n");
      out.write("\t\t\t\t<div>\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"username\" class=\"username\" placeholder=\"账号\"  autocomplete=\"off\"/>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("                <div>\n");
      out.write("\t\t\t\t\t<input type=\"password\" name=\"password\" class=\"password\" placeholder=\"密码\"     oncontextmenu=\"return false\" onpaste=\"return false\" />\n");
      out.write("                </div>\n");
      out.write("                <!--  \n");
      out.write("                <button id=\"submit\" type=\"button\">登陆</button>\n");
      out.write("                -->\n");
      out.write("                <input type = \"submit\" id=\"submit\" type=\"button\" value=\"登陆\" />\n");
      out.write("           \t</form>\n");
      out.write("\t        <form >\n");
      out.write("\t          \t<button id=\"register\" type=\"button\" onclick=\"toRegister()\">注册</button>\n");
      out.write("\t        </form>\n");
      out.write("            <div class=\"connect\">\n");
      out.write("                <p>You cannot improve your past, but you can improve your future. </p>\n");
      out.write("\t\t\t\t<p style=\"margin-top:20px;\">你不能改变你的过去，但你可以让你的未来变得更美好。</p>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\t\t<div class=\"alert\" style=\"display:none\">\n");
      out.write("\t\t\t<h2>消息</h2>\n");
      out.write("\t\t\t<div class=\"alert_con\">\n");
      out.write("\t\t\t\t<p id=\"ts\"></p>\n");
      out.write("\t\t\t\t<p style=\"line-height:70px\"><a class=\"btn\">确定</a></p>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</div>\n");
      out.write("\n");
      out.write("        <!-- Javascript -->\n");
      out.write("\t\t<script src=\"http://apps.bdimg.com/libs/jquery/1.6.4/jquery.min.js\" type=\"text/javascript\"></script>\n");
      out.write("        <script src=\"js/supersized.3.2.7.min.js\"></script>\n");
      out.write("        <script src=\"js/supersized-init.js\"></script>\n");
      out.write("\t\t<script>\n");
      out.write("\t\t$(document).ready(function(){\n");
      out.write("\t\t\tvar rs = '");
      out.print(rs);
      out.write("';\n");
      out.write("\t\t\tvar ls = '");
      out.print(ls);
      out.write("';\n");
      out.write("\t\t\tif(rs != \"\" && rs == '1'){\n");
      out.write("\t\t\t\t$(\"#ts\").html('恭喜您，注册成功，请登录 ! ');\n");
      out.write("\t\t\t\tis_show();\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\tvar lmsg = \"\";\n");
      out.write("\t\t\tif(ls != \"\"){\n");
      out.write("\t\t\t\tif(ls == 0){\n");
      out.write("\t\t\t\t\tlmsg += \"对不起, 账号或密码不能为空 ! \";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(ls == 1){\n");
      out.write("\t\t\t\t\tlmsg += \"恭喜您，登陆成功 ! \";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(ls == 2){\n");
      out.write("\t\t\t\t\tlmsg += \"对不起, 账号不存在 ! \";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(ls == 3){\n");
      out.write("\t\t\t\t\tlmsg += \"对不起, 密码错误 ! \";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(ls == 4){\n");
      out.write("\t\t\t\t\tlmsg += \"对不起, 账号格式不正确 ! \";\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t\tif(lmsg != \"\"){\n");
      out.write("\t\t\t\t\t$(\"#ts\").html(lmsg);\n");
      out.write("\t\t\t\t\tis_show();\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t$(\".btn\").click(function(){\n");
      out.write("\t\t\tis_hide();\n");
      out.write("\t\t})\n");
      out.write("\t\tvar u = $(\"input[name=username]\");\n");
      out.write("\t\tvar p = $(\"input[name=password]\");\n");
      out.write("\t\t$(\"#submit\").live('click',function(){\n");
      out.write("\t\t\tif(u.val() == '' || p.val() =='')\n");
      out.write("\t\t\t{\n");
      out.write("\t\t\t\t$(\"#ts\").html(\"用户名或密码不能为空~\");\n");
      out.write("\t\t\t\tis_show();\n");
      out.write("\t\t\t\treturn false;\n");
      out.write("\t\t\t}\n");
      out.write("\t\t\telse{\n");
      out.write("\t\t\t\tvar reg = /^([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+@([a-zA-Z0-9]+[_|\\_|\\.]?)*[a-zA-Z0-9]+\\.[a-zA-Z]{2,3}$/;\n");
      out.write("\t\t\t\tif(!reg.exec(u.val()))\n");
      out.write("\t\t\t\t{\n");
      out.write("\t\t\t\t\t$(\"#ts\").html(\"用户名错误格式\");\n");
      out.write("\t\t\t\t\tis_show();\n");
      out.write("\t\t\t\t\treturn false;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t});\n");
      out.write("\t\tfunction toRegister(){\n");
      out.write("\t\t\t window.location.href='../registered/registered.jsp';\n");
      out.write("\t\t}\n");
      out.write("\t\twindow.onload = function()\n");
      out.write("\t\t{\n");
      out.write("\t\t\t$(\".connect p\").eq(0).animate({\"left\":\"0%\"}, 600);\n");
      out.write("\t\t\t$(\".connect p\").eq(1).animate({\"left\":\"0%\"}, 400);\n");
      out.write("\t\t}\n");
      out.write("\t\tfunction is_hide(){ $(\".alert\").animate({\"top\":\"-40%\"}, 300) }\n");
      out.write("\t\tfunction is_show(){ $(\".alert\").show().animate({\"top\":\"45%\"}, 300) }\n");
      out.write("\t\t</script>\n");
      out.write("    </body>\n");
      out.write("\n");
      out.write("</html>\n");
      out.write("\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
